{
  "openapi": "3.0.4",
  "info": {
    "title": "BeYou WebAPI",
    "description": "List of APIs to handle operations for the BeYou Web API application",
    "contact": {
      "name": "NOT DEFINED YET",
      "email": "PENDING"
    },
    "version": "1.0"
  },
  "paths": {
    "/api/Authentication": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Logs in a user using the provided login model.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The login credentials.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUserLoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUserLoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUserLoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Authentication/refreshToken": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refreshes the authentication token using the provided token model.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The token refresh request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TokenModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResult"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResult"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResult"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Branch": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get list of all branches",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBranchDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBranchDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBranchDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Branch"
        ],
        "summary": "Create new branch",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Branch request model to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBranchDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBranchDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBranchDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              "Bearer"
            ]
          }
        ]
      }
    },
    "/api/Branch/ByRol": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get list of all branches by role from user logged in",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBranchDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBranchDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBranchDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Branch/{branchId}": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get branch with specific id",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "Branch id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Branch"
        ],
        "summary": "Update existing branch",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "Branch id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Branch request model to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBranchDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBranchDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBranchDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              "Bearer"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Branch"
        ],
        "summary": "Deletes a branch by its ID.",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "The ID of the branch to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Branch/{branchId}/Holiday": {
      "get": {
        "tags": [
          "BranchHoliday"
        ],
        "summary": "Get list of all branch's holidays",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "Branch id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "Year",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBranchHolidayDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBranchHolidayDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBranchHolidayDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BranchHoliday"
        ],
        "summary": "Assign holidays to a branch",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "Branch id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of holidays",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestBranchHolidayDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestBranchHolidayDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestBranchHolidayDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/BranchHoliday/{branchHolidayId}": {
      "get": {
        "tags": [
          "BranchHoliday"
        ],
        "summary": "Get branch holiday",
        "parameters": [
          {
            "name": "branchHolidayId",
            "in": "path",
            "description": "Branch holiday Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchHolidayDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchHolidayDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchHolidayDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/BranchSchedule/{branchScheduleId}": {
      "get": {
        "tags": [
          "BranchSchedule"
        ],
        "summary": "Get branch schedule with specific id",
        "parameters": [
          {
            "name": "branchScheduleId",
            "in": "path",
            "description": "Branch schedule id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchScheduleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchScheduleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchScheduleDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BranchScheduleBlock"
        ],
        "summary": "Assign new blocks of branch's schedule",
        "parameters": [
          {
            "name": "branchScheduleId",
            "in": "path",
            "description": "Branch schedule id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List Block request model to be assign",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestBranchScheduleBlockDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestBranchScheduleBlockDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestBranchScheduleBlockDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Branch/{branchId}/Schedule": {
      "get": {
        "tags": [
          "BranchSchedule"
        ],
        "summary": "Get schedules by branch",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "Branch id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchScheduleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchScheduleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchScheduleDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "BranchSchedule"
        ],
        "summary": "Assign schedules to a branch",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "Branch id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of schedules",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestBranchScheduleDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestBranchScheduleDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestBranchScheduleDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/BranchScheduleBlock/{branchScheduleßlockId}": {
      "get": {
        "tags": [
          "BranchScheduleBlock"
        ],
        "summary": "Get block with specific id",
        "parameters": [
          {
            "name": "branchScheduleßlockId",
            "in": "path",
            "description": "Block id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchScheduleBlockDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchScheduleBlockDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchScheduleBlockDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Schedule/{scheduleId}/Block": {
      "get": {
        "tags": [
          "BranchScheduleBlock"
        ],
        "summary": "Get blocks by schedule",
        "parameters": [
          {
            "name": "scheduleId",
            "in": "path",
            "description": "Schedule id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBranchScheduleBlockDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBranchScheduleBlockDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseBranchScheduleBlockDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/BranchScheduleBlock": {
      "post": {
        "tags": [
          "BranchScheduleBlock"
        ],
        "summary": "Create new block of branch's schedule",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Block request model to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBranchScheduleBlockDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBranchScheduleBlockDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBranchScheduleBlockDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchScheduleBlockDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchScheduleBlockDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchScheduleBlockDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/BranchScheduleBlock/{blockId}": {
      "put": {
        "tags": [
          "BranchScheduleBlock"
        ],
        "summary": "Update existing block of branch's schedule",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "description": "Block branch's schedule id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Block request model to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBranchScheduleBlockDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBranchScheduleBlockDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestBranchScheduleBlockDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchScheduleBlockDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchScheduleBlockDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBranchScheduleBlockDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BranchScheduleBlock"
        ],
        "summary": "Deletes a block by its ID.",
        "parameters": [
          {
            "name": "blockId",
            "in": "path",
            "description": "The ID of the block to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Province/{provinceId}/Canton": {
      "get": {
        "tags": [
          "Canton"
        ],
        "summary": "Retrieves all cantons associated with a specific province.",
        "parameters": [
          {
            "name": "provinceId",
            "in": "path",
            "description": "The ID of the province.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseCantonDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseCantonDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseCantonDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Canton/{idCanton}": {
      "get": {
        "tags": [
          "Canton"
        ],
        "summary": "Retrieves details of a specific canton by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The ID of the canton.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idCanton",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCantonDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCantonDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCantonDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Category": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Retrieves all categories.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseCategoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseCategoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseCategoryDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customer": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Retrieves a list of all customers.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseCustomerDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseCustomerDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseCustomerDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Customer/{customerId}": {
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Deletes a customer by its ID.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "The ID of the holiday to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCustomerDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCustomerDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCustomerDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Retrieves a specific customer by its ID.",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "The ID of the customer.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCustomerDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCustomerDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCustomerDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Canton/{cantonId}/District": {
      "get": {
        "tags": [
          "District"
        ],
        "summary": "Retrieves all districts associated with a specific canton.",
        "parameters": [
          {
            "name": "cantonId",
            "in": "path",
            "description": "The ID of the canton.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseDistrictDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseDistrictDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseDistrictDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/District/{idDistrict}": {
      "get": {
        "tags": [
          "District"
        ],
        "summary": "Retrieves details of a specific district by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The ID of the district.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "idDistrict",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDistrictDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDistrictDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDistrictDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Holiday": {
      "get": {
        "tags": [
          "Holiday"
        ],
        "summary": "Retrieves all holidays.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseHolidayDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseHolidayDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseHolidayDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Holiday"
        ],
        "summary": "Creates a new holiday.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The holiday data to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestHolidayDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestHolidayDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestHolidayDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseHolidayDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseHolidayDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseHolidayDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Holiday/{holidayId}": {
      "get": {
        "tags": [
          "Holiday"
        ],
        "summary": "Retrieves a specific holiday by its ID.",
        "parameters": [
          {
            "name": "holidayId",
            "in": "path",
            "description": "The ID of the holiday.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseHolidayDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseHolidayDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseHolidayDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Holiday"
        ],
        "summary": "Updates an existing holiday by its ID.",
        "parameters": [
          {
            "name": "holidayId",
            "in": "path",
            "description": "The ID of the holiday to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated holiday data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestHolidayDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestHolidayDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestHolidayDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseHolidayDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseHolidayDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseHolidayDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Holiday"
        ],
        "summary": "Deletes a holiday by its ID.",
        "parameters": [
          {
            "name": "holidayId",
            "in": "path",
            "description": "The ID of the holiday to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Inventory": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Retrieves all inventories for a given branch.",
        "parameters": [
          {
            "name": "inventoryId",
            "in": "query",
            "description": "The ID of the branch.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInventoryDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInventoryDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInventoryDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "Creates a new inventory for a given branch.",
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "description": "The ID of the branch.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The inventory data to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInventoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInventoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInventoryDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Inventory/{inventoryId}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Retrieves a specific inventory by its ID.",
        "parameters": [
          {
            "name": "inventoryId",
            "in": "path",
            "description": "The ID of the inventory.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Inventory"
        ],
        "summary": "Updates an existing inventory for a given branch.",
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "description": "The ID of the branch.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "inventoryId",
            "in": "path",
            "description": "The ID of the inventory to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated inventory data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInventoryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInventoryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInventoryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Inventory"
        ],
        "summary": "Deletes a specific inventory by its ID.",
        "parameters": [
          {
            "name": "inventoryId",
            "in": "path",
            "description": "The ID of the inventory to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryProduct/{inventoryProductId}": {
      "get": {
        "tags": [
          "InventoryProduct"
        ],
        "summary": "Retrieves a specific inventory product by its ID.",
        "parameters": [
          {
            "name": "inventoryProductId",
            "in": "path",
            "description": "The ID of the inventory product.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryProductDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryProductDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryProductDto"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "InventoryProduct"
        ],
        "summary": "Updates an existing inventory product.",
        "parameters": [
          {
            "name": "inventoryProductId",
            "in": "path",
            "description": "The ID of the inventory product to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated inventory product data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInventoryProductDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInventoryProductDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInventoryProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryProductDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryProductDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryProductDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Inventory/{inventoryId}/Products": {
      "get": {
        "tags": [
          "InventoryProduct"
        ],
        "summary": "Retrieves all inventory products for a given inventory.",
        "parameters": [
          {
            "name": "inventoryId",
            "in": "path",
            "description": "The ID of the inventory.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInventoryProductDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInventoryProductDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInventoryProductDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{productId}/Inventories": {
      "get": {
        "tags": [
          "InventoryProduct"
        ],
        "summary": "Retrieves all inventory products for a given product.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The ID of the product.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInventoryProductDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInventoryProductDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInventoryProductDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryProduct": {
      "post": {
        "tags": [
          "InventoryProduct"
        ],
        "summary": "Creates a new inventory product.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The inventory product data to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInventoryProductDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInventoryProductDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInventoryProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryProductDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryProductDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryProductDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryProduct/Bulk": {
      "post": {
        "tags": [
          "InventoryProduct"
        ],
        "summary": "Creates multiple inventory products in bulk.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "A collection of inventory product data to be created.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestInventoryProductDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestInventoryProductDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestInventoryProductDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/InventoryProductTransaction": {
      "post": {
        "tags": [
          "InventoryProductTransaction"
        ],
        "summary": "Creates a new inventory product movement record.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The inventory product movement data to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInventoryProductTransactionDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInventoryProductTransactionDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInventoryProductTransactionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryProductTransactionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryProductTransactionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInventoryProductTransactionDto"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Inventory/{inventoryId}/Transactions": {
      "get": {
        "tags": [
          "InventoryProductTransaction"
        ],
        "summary": "Retrieves all inventory product movements for a given inventory.",
        "parameters": [
          {
            "name": "inventoryId",
            "in": "path",
            "description": "The ID of the inventory.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInventoryProductTransactionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInventoryProductTransactionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInventoryProductTransactionDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{productId}/Transactions": {
      "get": {
        "tags": [
          "InventoryProductTransaction"
        ],
        "summary": "Retrieves all inventory product movements for a given product.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The ID of the product.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInventoryProductTransactionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInventoryProductTransactionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInventoryProductTransactionDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Retrieves all invoices.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInvoiceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInvoiceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInvoiceDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Creates a new invoice.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The invoice data to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInvoiceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInvoiceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestInvoiceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInvoiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInvoiceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInvoiceDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/{invoiceId}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Retrieves a specific invoice by its ID.",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "The ID of the invoice.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInvoiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInvoiceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInvoiceDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/{invoiceId}/InvoiceDetail": {
      "get": {
        "tags": [
          "InvoiceDetail"
        ],
        "summary": "Retrieves all detail invoices associated with a specific invoice.",
        "parameters": [
          {
            "name": "invoiceId",
            "in": "path",
            "description": "The ID of the invoice.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInvoiceDetailDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInvoiceDetailDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseInvoiceDetailDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Invoice/{invoiceId}/InvoiceDetail/{invoiceDetailId}": {
      "get": {
        "tags": [
          "InvoiceDetail"
        ],
        "summary": "Retrieves a specific detail invoice by its ID and associated invoice ID.",
        "parameters": [
          {
            "name": "invoiceDetailId",
            "in": "path",
            "description": "The ID of the detail invoice.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "invoiceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInvoiceDetailDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInvoiceDetailDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseInvoiceDetailDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Order": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Retrieves all orders.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseOrderDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseOrderDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseOrderDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Creates a new order.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The order data to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestOrderDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestOrderDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestOrderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOrderDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOrderDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOrderDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Order/{orderId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Retrieves an order by its ID.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "The ID of the order to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOrderDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOrderDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseOrderDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/PaymentType": {
      "get": {
        "tags": [
          "PaymentType"
        ],
        "summary": "Get list of all payment types",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponsePaymentTypeDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponsePaymentTypeDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponsePaymentTypeDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Retrieves a list of products, optionally excluding those associated with a specified inventory.",
        "parameters": [
          {
            "name": "excludeProductsInventory",
            "in": "query",
            "description": "Whether to exclude products associated with the inventory.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "inventoryId",
            "in": "query",
            "description": "The ID of the inventory to filter products by.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseProductDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseProductDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseProductDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Creates a new product.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The product data to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestProductDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestProductDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestProductDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProductDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProductDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProductDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{productId}": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Retrieves a product by its ID.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The ID of the product to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProductDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProductDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProductDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Product"
        ],
        "summary": "Updates an existing product by its ID.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "The ID of the product to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated product data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestProductDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestProductDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestProductDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProductDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProductDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProductDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Province": {
      "get": {
        "tags": [
          "Province"
        ],
        "summary": "Get list of all provinces",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseProvinceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseProvinceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseProvinceDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Province/{provinceId}": {
      "get": {
        "tags": [
          "Province"
        ],
        "summary": "Get province with specific id",
        "parameters": [
          {
            "name": "provinceId",
            "in": "path",
            "description": "Province id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProvinceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProvinceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProvinceDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reservation": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "summary": "Get list of all reservations",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseReservationDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseReservationDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseReservationDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reservation"
        ],
        "summary": "Create a new reservation",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Reservation request model to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestReservationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestReservationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestReservationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Branch/{branchId}/reservations": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "summary": "Get list of all reservations by branch with filter option with start date and end date",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "Branch id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ResponseReservationCalendarAgendaDto"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ResponseReservationCalendarAgendaDto"
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/ResponseReservationCalendarAgendaDto"
                    }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reservation/{reservationId}": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "summary": "Get list of all reservations by branch",
        "parameters": [
          {
            "name": "reservationId",
            "in": "path",
            "description": "Branch id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Reservation"
        ],
        "summary": "Update an existing reservation",
        "parameters": [
          {
            "name": "serviceId",
            "in": "query",
            "description": "Service id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reservationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Reservation request model to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestReservationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestReservationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestReservationDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Branch/{branchId}/date-availability/{date}": {
      "get": {
        "tags": [
          "Reservation"
        ],
        "summary": "Get availablity for a branch in specific date",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "Branch id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "date",
            "in": "path",
            "description": "Date to filter",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "time"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "time"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "time"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/ReservationDetail/{reservationDetailId}": {
      "get": {
        "tags": [
          "ReservationDetail"
        ],
        "summary": "Get reservation detail with specific id",
        "parameters": [
          {
            "name": "reservationDetailId",
            "in": "path",
            "description": "Reservation detail Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationDetailDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationDetailDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationDetailDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Reservation/{id}/Detail": {
      "get": {
        "tags": [
          "ReservationDetail"
        ],
        "summary": "Get list of all reservation's details by branch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Branch id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationDetailDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationDetailDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationDetailDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ReservationDetail"
        ],
        "summary": "Create details reservation",
        "parameters": [
          {
            "name": "branchId",
            "in": "query",
            "description": "Branch id",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of details to be added",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestReservationDetailDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestReservationDetailDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestReservationDetailDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/ReservationQuestion": {
      "get": {
        "tags": [
          "ReservationQuestion"
        ],
        "summary": "Get list of all reservation's questions",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseReservationQuestionDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseReservationQuestionDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseReservationQuestionDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/ReservationQuestion/{reservationQuestionId}": {
      "get": {
        "tags": [
          "ReservationQuestion"
        ],
        "summary": "Get reservation question with specific id",
        "parameters": [
          {
            "name": "reservationQuestionId",
            "in": "path",
            "description": "Reservation question Id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationQuestionDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationQuestionDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseReservationQuestionDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Role": {
      "get": {
        "tags": [
          "Role"
        ],
        "summary": "Get list of all roles",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseRoleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseRoleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseRoleDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Schedule": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Retrieves all schedules.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseScheduleDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseScheduleDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseScheduleDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Schedule"
        ],
        "summary": "Creates a new schedule.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The schedule data to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestScheduleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestScheduleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestScheduleDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseScheduleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseScheduleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseScheduleDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Schedule/{scheduleId}": {
      "get": {
        "tags": [
          "Schedule"
        ],
        "summary": "Retrieves a specific schedule by its ID.",
        "parameters": [
          {
            "name": "scheduleId",
            "in": "path",
            "description": "The ID of the schedule.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseScheduleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseScheduleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseScheduleDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Schedule"
        ],
        "summary": "Updates an existing schedule by its ID.",
        "parameters": [
          {
            "name": "scheduleId",
            "in": "path",
            "description": "The ID of the schedule to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated schedule data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestScheduleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestScheduleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestScheduleDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseScheduleDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseScheduleDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseScheduleDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Schedule"
        ],
        "summary": "Deletes a specific schedule by its ID.",
        "parameters": [
          {
            "name": "scheduleId",
            "in": "path",
            "description": "The ID of the schedule to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Service": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Get list of all services",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseServiceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseServiceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseServiceDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Service"
        ],
        "summary": "Create new service",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Service request model to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestServiceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestServiceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestServiceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServiceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServiceDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              "Bearer"
            ]
          }
        ]
      }
    },
    "/api/Service/{serviceId}": {
      "get": {
        "tags": [
          "Service"
        ],
        "summary": "Get service with specific id",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServiceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServiceDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Service"
        ],
        "summary": "Update existing service",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "Service id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Service request model to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestServiceDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestServiceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestServiceDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServiceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServiceDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "Bearer": [
              "Bearer"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Service"
        ],
        "summary": "Deletes a service by its ID.",
        "parameters": [
          {
            "name": "serviceId",
            "in": "path",
            "description": "The ID of the service to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServiceDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServiceDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseServiceDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tax": {
      "get": {
        "tags": [
          "Tax"
        ],
        "summary": "Retrieves all taxes.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseTaxDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseTaxDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseTaxDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tax"
        ],
        "summary": "Creates a new tax.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Tax request model to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTaxDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTaxDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTaxDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTaxDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTaxDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTaxDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Tax/{taxId}": {
      "get": {
        "tags": [
          "Tax"
        ],
        "summary": "Get the exact tax by id.",
        "parameters": [
          {
            "name": "taxId",
            "in": "path",
            "description": "Id to look for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTaxDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTaxDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTaxDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Tax"
        ],
        "summary": "Updates a tax by its ID.",
        "parameters": [
          {
            "name": "taxId",
            "in": "path",
            "description": "Id to look for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Tax request model to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTaxDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTaxDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestTaxDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTaxDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTaxDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseTaxDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Tax"
        ],
        "summary": "Deletes a tax by its ID.",
        "parameters": [
          {
            "name": "taxId",
            "in": "path",
            "description": "Id to look for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/TypeService": {
      "get": {
        "tags": [
          "TypeService"
        ],
        "summary": "Get list of all service types",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseTypeServiceDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseTypeServiceDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseTypeServiceDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/UnitMeasure": {
      "get": {
        "tags": [
          "UnitMeasure"
        ],
        "summary": "Get list of all unit of measures",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseUnitMeasureDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseUnitMeasureDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseUnitMeasureDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "UnitMeasure"
        ],
        "summary": "Create a new unit of measure",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Unit of measure data transfer object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUnitMeasureDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUnitMeasureDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUnitMeasureDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUnitMeasureDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUnitMeasureDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUnitMeasureDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/UnitMeasure/{unitMeasureId}": {
      "get": {
        "tags": [
          "UnitMeasure"
        ],
        "summary": "Get unit of measure by id",
        "parameters": [
          {
            "name": "unitMeasureId",
            "in": "path",
            "description": "Unit of measure id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUnitMeasureDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUnitMeasureDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUnitMeasureDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "UnitMeasure"
        ],
        "summary": "Update an existing unit of measure",
        "parameters": [
          {
            "name": "unitMeasureId",
            "in": "path",
            "description": "Unit of measure id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Unit of measure data transfer object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUnitMeasureDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUnitMeasureDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestUnitMeasureDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUnitMeasureDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUnitMeasureDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseUnitMeasureDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "UnitMeasure"
        ],
        "summary": "Delete an existing unit of measure",
        "parameters": [
          {
            "name": "unitMeasureId",
            "in": "path",
            "description": "Unit of measure id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/User": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get list of all users",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseUserDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseUserDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseUserDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/User/ByRol/{rol}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get list of all users by role",
        "parameters": [
          {
            "name": "role",
            "in": "query",
            "description": "Role to look for",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rol",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseUserDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseUserDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseUserDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Branch/{branchId}/Users": {
      "post": {
        "tags": [
          "UserBranch"
        ],
        "summary": "Assign users to specific branch",
        "parameters": [
          {
            "name": "branchId",
            "in": "path",
            "description": "Branch id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "List of users",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestUserBranchDto"
                }
              }
            },
            "text/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestUserBranchDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RequestUserBranchDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Branch/{id}/Branch/{branchId}/availability": {
      "get": {
        "tags": [
          "UserBranch"
        ],
        "summary": "Check if user is available to assign to a branch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "branchId",
            "in": "path",
            "description": "Branch id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Vendor": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Retrieves a list of suppliers with optional pagination.",
        "parameters": [
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Paginated",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseVendorDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseVendorDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseVendorDto"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Creates a new supplier.",
        "parameters": [
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The supplier data to be created.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestVendorDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestVendorDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestVendorDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVendorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVendorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVendorDto"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    },
    "/api/Vendor/{vendorId}": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Retrieves a supplier by its ID.",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "description": "The ID of the supplier to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVendorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVendorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVendorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vendor"
        ],
        "summary": "Updates an existing supplier by its ID.",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "description": "The ID of the supplier to update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The updated supplier data.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestVendorDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestVendorDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RequestVendorDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVendorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVendorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVendorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Content",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Vendor"
        ],
        "summary": "Deletes a supplier by its ID.",
        "parameters": [
          {
            "name": "vendorId",
            "in": "path",
            "description": "The ID of the supplier to delete.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "x-api-version",
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorDetailsBeYou"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthenticationResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ErrorDetailsBeYou": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type identifier",
            "nullable": true
          },
          "statusCode": {
            "type": "integer",
            "description": "Status code for error",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "description": "Error detail",
            "nullable": true
          },
          "logLevel": {
            "$ref": "#/components/schemas/LogLevel"
          }
        },
        "additionalProperties": false
      },
      "LogLevel": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "MonthApplication": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12
        ],
        "type": "integer",
        "format": "int32"
      },
      "RequestBranchDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "districtId": {
            "type": "integer",
            "format": "int64"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestBranchHolidayDto": {
        "type": "object",
        "properties": {
          "holidayId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "RequestBranchScheduleBlockDto": {
        "type": "object",
        "properties": {
          "branchScheduleId": {
            "type": "integer",
            "format": "int64"
          },
          "startHour": {
            "type": "string",
            "format": "time"
          },
          "endHour": {
            "type": "string",
            "format": "time"
          }
        },
        "additionalProperties": false
      },
      "RequestBranchScheduleDto": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "scheduleId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestHolidayDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "month": {
            "$ref": "#/components/schemas/MonthApplication"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestInventoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "typeInventory": {
            "$ref": "#/components/schemas/TypeInventoryApplication"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestInventoryProductDto": {
        "type": "object",
        "properties": {
          "inventoryId": {
            "type": "integer",
            "format": "int64"
          },
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "assignable": {
            "type": "number",
            "format": "double"
          },
          "minimum": {
            "type": "number",
            "format": "double"
          },
          "maximum": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestInventoryProductTransactionDto": {
        "type": "object",
        "properties": {
          "inventoryProductId": {
            "type": "integer",
            "format": "int64"
          },
          "transactionType": {
            "$ref": "#/components/schemas/TransactionTypeInventoryApplication"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestInvoiceDetailDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "serviceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lineNumber": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestInvoiceDto": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "paymentTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "taxId": {
            "type": "integer",
            "format": "int64"
          },
          "taxRate": {
            "type": "number",
            "format": "double"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "invoiceDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestInvoiceDetailDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestOrderDetailDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "serviceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lineNumber": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestOrderDto": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "paymentTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "taxId": {
            "type": "integer",
            "format": "int64"
          },
          "reservationId": {
            "type": "integer",
            "format": "int64"
          },
          "taxRate": {
            "type": "number",
            "format": "double"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "statusOrderId": {
            "type": "string"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "orderDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestOrderDetailDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "unitMeasureId": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestReservationDetailDto": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "integer",
            "format": "int64"
          },
          "serviceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestReservationDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "hour": {
            "type": "string",
            "format": "time"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "reservationQuestion": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestReservationQuestionDto"
            },
            "nullable": true
          },
          "reservationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RequestReservationDetailDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestReservationQuestionDto": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "integer",
            "format": "int64"
          },
          "question": {
            "type": "string",
            "nullable": true
          },
          "answer": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestScheduleDto": {
        "type": "object",
        "properties": {
          "day": {
            "$ref": "#/components/schemas/WeekDayApplication"
          },
          "startHour": {
            "type": "string",
            "format": "time"
          },
          "endHour": {
            "type": "string",
            "format": "time"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestServiceDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "typeServiceId": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "observation": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestTaxDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestUnitMeasureDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestUserBranchDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "RequestUserLoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestVendorDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "fiscalNumber": {
            "type": "string",
            "nullable": true
          },
          "socialReason": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "districtId": {
            "type": "integer",
            "format": "int64"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseBranchDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "districtId": {
            "type": "integer",
            "format": "int64"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "district": {
            "$ref": "#/components/schemas/ResponseDistrictDto"
          },
          "inventories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseInventoryDto"
            },
            "nullable": true
          },
          "branchSchedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseBranchScheduleDto"
            },
            "nullable": true
          },
          "userBranches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseUserBranchDto"
            },
            "nullable": true
          },
          "branchHolidays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseBranchHolidayDto"
            },
            "nullable": true
          },
          "reservas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseReservationDto"
            },
            "nullable": true
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseOrderDto"
            },
            "nullable": true
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseInvoiceDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResponseBranchHolidayDto": {
        "type": "object",
        "properties": {
          "holidayId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "holiday": {
            "$ref": "#/components/schemas/ResponseHolidayDto"
          },
          "branch": {
            "$ref": "#/components/schemas/ResponseBranchDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseBranchScheduleBlockDto": {
        "type": "object",
        "properties": {
          "branchScheduleId": {
            "type": "integer",
            "format": "int64"
          },
          "startHour": {
            "type": "string",
            "format": "time"
          },
          "endHour": {
            "type": "string",
            "format": "time"
          },
          "active": {
            "type": "boolean"
          },
          "branchSchedule": {
            "$ref": "#/components/schemas/ResponseBranchScheduleDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseBranchScheduleDto": {
        "type": "object",
        "properties": {
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "scheduleId": {
            "type": "integer",
            "format": "int64"
          },
          "schedule": {
            "$ref": "#/components/schemas/ResponseScheduleDto"
          },
          "branch": {
            "$ref": "#/components/schemas/ResponseBranchDto"
          },
          "branchScheduleBlocks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseBranchScheduleBlockDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseCantonDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "provinceId": {
            "type": "integer",
            "format": "int64"
          },
          "districts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseDistrictDto"
            },
            "nullable": true
          },
          "province": {
            "$ref": "#/components/schemas/ResponseProvinceDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseCategoryDto": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseProductDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResponseContactDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "vendorId": {
            "type": "integer",
            "format": "int64"
          },
          "vendor": {
            "$ref": "#/components/schemas/ResponseVendorDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResponseCustomerDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "integer",
            "format": "int32"
          },
          "districtId": {
            "type": "integer",
            "format": "int64"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseInvoiceDto"
            },
            "nullable": true
          },
          "reservations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseReservationDto"
            },
            "nullable": true
          },
          "district": {
            "$ref": "#/components/schemas/ResponseDistrictDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResponseDistrictDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "cantonId": {
            "type": "integer",
            "format": "int64"
          },
          "customers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseCustomerDto"
            },
            "nullable": true
          },
          "canton": {
            "$ref": "#/components/schemas/ResponseCantonDto"
          },
          "vendors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseVendorDto"
            },
            "nullable": true
          },
          "branches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseBranchDto"
            },
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseUserDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseGenderDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseUserDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseHolidayDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "month": {
            "$ref": "#/components/schemas/MonthApplication"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "branchHolidays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseBranchHolidayDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResponseInventoryDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "typeInventory": {
            "$ref": "#/components/schemas/TypeInventoryApplication"
          },
          "branch": {
            "$ref": "#/components/schemas/ResponseBranchDto"
          },
          "inventoryProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseInventoryProductDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResponseInventoryProductDto": {
        "type": "object",
        "properties": {
          "inventoryId": {
            "type": "integer",
            "format": "int64"
          },
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "assignable": {
            "type": "number",
            "format": "double"
          },
          "minimum": {
            "type": "number",
            "format": "double"
          },
          "maximum": {
            "type": "number",
            "format": "double"
          },
          "inventory": {
            "$ref": "#/components/schemas/ResponseInventoryDto"
          },
          "product": {
            "$ref": "#/components/schemas/ResponseProductDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResponseInventoryProductTransactionDto": {
        "type": "object",
        "properties": {
          "inventoryProductId": {
            "type": "integer",
            "format": "int64"
          },
          "transactionType": {
            "$ref": "#/components/schemas/TransactionTypeInventoryApplication"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "inventoryProduct": {
            "$ref": "#/components/schemas/ResponseInventoryProductDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResponseInvoiceDetailDto": {
        "type": "object",
        "properties": {
          "invoiceId": {
            "type": "integer",
            "format": "int64"
          },
          "serviceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lineNumber": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "invoiceDetailProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseInvoiceDetailProductDto"
            },
            "nullable": true
          },
          "invoice": {
            "$ref": "#/components/schemas/ResponseInvoiceDto"
          },
          "service": {
            "$ref": "#/components/schemas/ResponseServiceDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseInvoiceDetailProductDto": {
        "type": "object",
        "properties": {
          "invoiceDetailId": {
            "type": "integer",
            "format": "int64"
          },
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "invoiceDetail": {
            "$ref": "#/components/schemas/ResponseInvoiceDetailDto"
          },
          "product": {
            "$ref": "#/components/schemas/ResponseProductDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseInvoiceDto": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "orderId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "paymentTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "taxId": {
            "type": "integer",
            "format": "int64"
          },
          "taxRate": {
            "type": "number",
            "format": "double"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "invoiceDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseInvoiceDetailDto"
            },
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/ResponseCustomerDto"
          },
          "taxInfo": {
            "$ref": "#/components/schemas/ResponseTaxDto"
          },
          "paymentType": {
            "$ref": "#/components/schemas/ResponsePaymentTypeDto"
          },
          "order": {
            "$ref": "#/components/schemas/ResponseOrderDto"
          },
          "branch": {
            "$ref": "#/components/schemas/ResponseBranchDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResponseOrderDetailDto": {
        "type": "object",
        "properties": {
          "orderId": {
            "type": "integer",
            "format": "int64"
          },
          "serviceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "lineNumber": {
            "type": "integer",
            "format": "int32"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "unitPrice": {
            "type": "number",
            "format": "double"
          },
          "subtotal": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "orderDetailProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseOrderDetailProductDto"
            },
            "nullable": true
          },
          "order": {
            "$ref": "#/components/schemas/ResponseOrderDto"
          },
          "service": {
            "$ref": "#/components/schemas/ResponseServiceDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseOrderDetailProductDto": {
        "type": "object",
        "properties": {
          "orderDetailId": {
            "type": "integer",
            "format": "int64"
          },
          "productId": {
            "type": "integer",
            "format": "int64"
          },
          "quantity": {
            "type": "number",
            "format": "double"
          },
          "orderDetail": {
            "$ref": "#/components/schemas/ResponseOrderDetailDto"
          },
          "product": {
            "$ref": "#/components/schemas/ResponseProductDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseOrderDto": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date"
          },
          "paymentTypeId": {
            "type": "integer",
            "format": "int64"
          },
          "number": {
            "type": "integer",
            "format": "int32"
          },
          "taxId": {
            "type": "integer",
            "format": "int64"
          },
          "reservationId": {
            "type": "integer",
            "format": "int64"
          },
          "taxRate": {
            "type": "number",
            "format": "double"
          },
          "subTotal": {
            "type": "number",
            "format": "double"
          },
          "tax": {
            "type": "number",
            "format": "double"
          },
          "total": {
            "type": "number",
            "format": "double"
          },
          "statusOrderId": {
            "type": "string"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "orderDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseOrderDetailDto"
            },
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/ResponseCustomerDto"
          },
          "taxInfo": {
            "$ref": "#/components/schemas/ResponseTaxDto"
          },
          "paymentType": {
            "$ref": "#/components/schemas/ResponsePaymentTypeDto"
          },
          "reservation": {
            "$ref": "#/components/schemas/ResponseReservationDto"
          },
          "branch": {
            "$ref": "#/components/schemas/ResponseBranchDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResponsePaymentTypeDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "referenceNumber": {
            "type": "integer",
            "format": "int32"
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseInvoiceDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseProductDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "categoryId": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "sku": {
            "type": "string",
            "nullable": true
          },
          "unitMeasureId": {
            "type": "integer",
            "format": "int64"
          },
          "invoiceDetailProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseInvoiceDetailProductDto"
            },
            "nullable": true
          },
          "category": {
            "$ref": "#/components/schemas/ResponseCategoryDto"
          },
          "unitMeasure": {
            "$ref": "#/components/schemas/ResponseUnitMeasureDto"
          },
          "inventarios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseInventoryDto"
            },
            "nullable": true
          },
          "inventoryProducts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseInventoryProductDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResponseProvinceDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "cantons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseCantonDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseReservationCalendarAgendaDto": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "classNames": {
            "type": "string",
            "nullable": true
          },
          "icon": {
            "type": "string",
            "nullable": true
          },
          "allDay": {
            "type": "boolean"
          },
          "display": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ResponseReservationDetailDto": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "integer",
            "format": "int64"
          },
          "serviceId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "productId": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "reservation": {
            "$ref": "#/components/schemas/ResponseReservationDto"
          },
          "service": {
            "$ref": "#/components/schemas/ResponseServiceDto"
          },
          "product": {
            "$ref": "#/components/schemas/ResponseProductDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseReservationDto": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "hour": {
            "type": "string",
            "format": "time"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "customerName": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "branch": {
            "$ref": "#/components/schemas/ResponseBranchDto"
          },
          "customer": {
            "$ref": "#/components/schemas/ResponseCustomerDto"
          },
          "reservationQuestions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseReservationQuestionDto"
            },
            "nullable": true
          },
          "reservationDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseReservationDetailDto"
            },
            "nullable": true
          },
          "orders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseOrderDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResponseReservationQuestionDto": {
        "type": "object",
        "properties": {
          "reservationId": {
            "type": "integer",
            "format": "int64"
          },
          "question": {
            "type": "string",
            "nullable": true
          },
          "answer": {
            "type": "string",
            "nullable": true
          },
          "reservation": {
            "$ref": "#/components/schemas/ResponseReservationDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResponseRoleDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "users": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseUserDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResponseScheduleDto": {
        "type": "object",
        "properties": {
          "day": {
            "$ref": "#/components/schemas/WeekDayApplication"
          },
          "startHour": {
            "type": "string",
            "format": "time"
          },
          "endHour": {
            "type": "string",
            "format": "time"
          },
          "branchSchedules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseBranchScheduleDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResponseServiceDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "typeServiceId": {
            "type": "integer",
            "format": "int64"
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "observation": {
            "type": "string",
            "nullable": true
          },
          "invoiceDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseInvoiceDetailDto"
            },
            "nullable": true
          },
          "typeService": {
            "$ref": "#/components/schemas/ResponseTypeServiceDto"
          },
          "detalleReservas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseReservationDetailDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResponseTaxDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "format": "double"
          },
          "invoices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseInvoiceDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseTypeServiceDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "format": "time"
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseServiceDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseUnitMeasureDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "symbol": {
            "type": "string",
            "nullable": true
          },
          "products": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseProductDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseUserBranchDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "branchId": {
            "type": "integer",
            "format": "int64"
          },
          "branch": {
            "$ref": "#/components/schemas/ResponseBranchDto"
          },
          "user": {
            "$ref": "#/components/schemas/ResponseUserDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "ResponseUserDto": {
        "type": "object",
        "properties": {
          "cardId": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "districtId": {
            "type": "integer",
            "format": "int64"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "birthday": {
            "type": "string",
            "format": "date"
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "genderId": {
            "type": "integer",
            "format": "int64"
          },
          "profilePictureUrl": {
            "type": "string",
            "nullable": true
          },
          "roleId": {
            "type": "integer",
            "format": "int64"
          },
          "district": {
            "$ref": "#/components/schemas/ResponseDistrictDto"
          },
          "gender": {
            "$ref": "#/components/schemas/ResponseGenderDto"
          },
          "role": {
            "$ref": "#/components/schemas/ResponseRoleDto"
          },
          "userBranches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseUserBranchDto"
            },
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ResponseVendorDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "cardId": {
            "type": "string",
            "nullable": true
          },
          "socialReason": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "integer",
            "format": "int32"
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "districtId": {
            "type": "integer",
            "format": "int64"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "contacts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResponseContactDto"
            },
            "nullable": true
          },
          "district": {
            "$ref": "#/components/schemas/ResponseDistrictDto"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "updated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedBy": {
            "type": "string",
            "nullable": true
          },
          "active": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "TokenModel": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "nullable": true
          },
          "refreshToken": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "TransactionTypeInventoryApplication": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "TypeInventoryApplication": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "WeekDayApplication": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7
        ],
        "type": "integer",
        "format": "int32"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authorization header using Bearer schema",
        "scheme": "Bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}
